{"ast":null,"code":"import { FormGroup, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/api-service.service\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction BigformComponent_h6_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h6\", 24);\n    i0.ɵɵtext(1, \" New Clan \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BigformComponent_h6_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h6\", 24);\n    i0.ɵɵtext(1, \" Edit Profile \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BigformComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25)(1, \"button\", 26);\n    i0.ɵɵtext(2, \" Create \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction BigformComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25)(1, \"button\", 26);\n    i0.ɵɵtext(2, \" Apply \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction BigformComponent_h6_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h6\", 27);\n    i0.ɵɵtext(1, \" Description \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BigformComponent_h6_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h6\", 27);\n    i0.ɵɵtext(1, \" About Me \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BigformComponent_label_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 12);\n    i0.ɵɵtext(1, \" Profile Photo \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BigformComponent_label_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 12);\n    i0.ɵɵtext(1, \" Clan Photo \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BigformComponent_div_36_h6_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h6\", 33);\n    i0.ɵɵtext(1, \" Password \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BigformComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"hr\", 14);\n    i0.ɵɵtemplate(2, BigformComponent_div_36_h6_2_Template, 2, 0, \"h6\", 28);\n    i0.ɵɵelementStart(3, \"div\", 9)(4, \"div\", 29)(5, \"div\", 11)(6, \"label\", 12);\n    i0.ɵɵtext(7, \" Curent Password \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 30);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 29)(10, \"div\", 11)(11, \"label\", 12);\n    i0.ɵɵtext(12, \" New Password \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 31);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 29)(15, \"div\", 11)(16, \"label\", 12);\n    i0.ɵɵtext(17, \" Confirm Password \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"input\", 32);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.type == \"user\");\n  }\n}\nexport class BigformComponent {\n  constructor(api, auth, router) {\n    this.api = api;\n    this.auth = auth;\n    this.router = router;\n    this.editForm = new FormGroup({\n      name: new FormControl(),\n      desc: new FormControl(),\n      password: new FormControl(),\n      password2: new FormControl(),\n      password3: new FormControl()\n    });\n    if (this.type === \"user\") {\n      this.api.getBasicProfile().subscribe(data => {\n        this.editForm.controls.name.setValue(data.name);\n        this.editForm.controls.desc.setValue(data.bio);\n      });\n    } else if (this.type === \"clan\") {}\n  }\n  onImgChange(event) {\n    this.img = event.target.files[0];\n  }\n  onBackgroundImgChange(event) {\n    this.background_img = event.target.files[0];\n  }\n  onSubmit() {\n    if (this.type === \"user\") {\n      if (!this.editForm.value.password) {\n        alert(\"Please enter your password\");\n      } else if ((this.editForm.value.password2 || this.editForm.value.password3) && this.editForm.value.password2 !== this.editForm.value.password3) {\n        alert(\"Passwords do not match\");\n      } else {\n        let header = {\n          name: this.editForm.value.name,\n          bio: this.editForm.value.desc,\n          password: this.editForm.value.password\n        };\n        if (this.editForm.value.password2) {\n          header.new_password = this.editForm.value.password2;\n        }\n        if (this.img) {\n          let reader = new FileReader();\n          reader.readAsDataURL(this.img);\n          reader.onload = () => {\n            header.img = [reader.result, this.img.name];\n            if (this.background_img) {\n              let reader2 = new FileReader();\n              reader2.readAsDataURL(this.background_img);\n              reader2.onload = () => {\n                header.background_img = [reader2.result, this.background_img.name];\n                this.api_call(header);\n              };\n            } else {\n              this.api_call(header);\n            }\n          };\n        } else if (this.background_img) {\n          let reader = new FileReader();\n          reader.readAsDataURL(this.background_img);\n          reader.onload = () => {\n            header.background_img = [reader.result, this.background_img.name];\n            if (this.img) {\n              let reader2 = new FileReader();\n              reader2.readAsDataURL(this.img);\n              reader2.onload = () => {\n                header.img = [reader2.result, this.img.name];\n                this.api_call(header);\n              };\n            } else {\n              this.api_call(header);\n            }\n          };\n        } else {\n          this.api_call(header);\n        }\n      }\n    } else if (this.type === \"clan\") {\n      let header = {\n        name: this.editForm.value.name,\n        desc: this.editForm.value.desc,\n        password: this.editForm.value.password\n      };\n      if (this.img) {\n        let reader = new FileReader();\n        reader.readAsDataURL(this.img);\n        reader.onload = () => {\n          header.img = [reader.result, this.img.name];\n          if (this.background_img) {\n            let reader2 = new FileReader();\n            reader2.readAsDataURL(this.background_img);\n            reader2.onload = () => {\n              header.background_img = [reader2.result, this.background_img.name];\n              this.api_call(header);\n            };\n          } else {\n            this.api_call(header);\n          }\n        };\n      } else if (this.background_img) {\n        let reader = new FileReader();\n        reader.readAsDataURL(this.background_img);\n        reader.onload = () => {\n          header.background_img = [reader.result, this.background_img.name];\n          if (this.img) {\n            let reader2 = new FileReader();\n            reader2.readAsDataURL(this.img);\n            reader2.onload = () => {\n              header.img = [reader2.result, this.img.name];\n              this.api_call(header);\n            };\n          } else {\n            this.api_call(header);\n          }\n        };\n      } else {\n        this.api_call(header);\n      }\n    }\n  }\n  api_call(header) {\n    if (this.type === \"user\") {\n      this.api.updateProfile(header).subscribe(data => {\n        if (data.hasOwnProperty('error')) {\n          alert(data.error);\n        } else {\n          alert(data.success);\n          if (this.editForm.value.password2) {\n            this.auth.logout();\n            return;\n          }\n          window.location.reload();\n        }\n      });\n    } else if (this.type === \"clan\") {\n      this.api.createClan(header).subscribe(data => {\n        if (data.hasOwnProperty('error')) {\n          alert(data.error);\n        } else {\n          alert(data.success);\n          this.router.navigate(['/myclans']);\n        }\n      });\n    }\n  }\n}\nBigformComponent.ɵfac = function BigformComponent_Factory(t) {\n  return new (t || BigformComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n};\nBigformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BigformComponent,\n  selectors: [[\"app-bigform\"]],\n  inputs: {\n    type: \"type\"\n  },\n  decls: 37,\n  vars: 10,\n  consts: [[\"data-aos\", \"fade-up\", 1, \"bg-base-600\", \"h-full\"], [1, \"w-full\", \"lg:w-8/12\", \"px-4\", \"mx-auto\", \"mt-6\"], [1, \"relative\", \"flex\", \"flex-col\", \"min-w-0\", \"break-words\", \"w-full\", \"mb-6\", \"shadow-lg\", \"rounded-lg\", \"bg-blueGray-100\", \"border-0\"], [1, \"rounded-t\", \"bg-white\", \"mb-0\", \"px-6\", \"py-6\"], [1, \"text-center\", \"flex\", \"justify-between\"], [\"class\", \"text-blueGray-700 text-xl font-bold\", 4, \"ngIf\"], [1, \"flex-auto\", \"px-4\", \"lg:px-10\", \"py-10\", \"pt-0\"], [\"enctype\", \"multipart/form-data\", 3, \"formGroup\", \"submit\"], [\"class\", \"mx-auto text-right\", 4, \"ngIf\"], [1, \"flex\", \"flex-wrap\"], [1, \"w-full\", \"lg:w-12/12\", \"px-4\"], [1, \"relative\", \"w-full\", \"mb-3\"], [\"htmlfor\", \"grid-password\", 1, \"block\", \"uppercase\", \"text-blueGray-600\", \"text-xs\", \"font-bold\", \"mb-2\"], [\"type\", \"text\", \"name\", \"name\", \"formControlName\", \"name\", 1, \"border-0\", \"px-3\", \"py-3\", \"placeholder-blueGray-300\", \"text-blueGray-600\", \"bg-white\", \"rounded\", \"text-sm\", \"shadow\", \"focus:outline-none\", \"focus:ring\", \"w-full\", \"ease-linear\", \"transition-all\", \"duration-150\"], [1, \"mt-6\", \"border-b-1\", \"border-blueGray-300\"], [\"class\", \"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\", 4, \"ngIf\"], [\"type\", \"text\", \"rows\", \"4\", \"name\", \"content\", \"formControlName\", \"desc\", 1, \"border-0\", \"px-3\", \"py-3\", \"placeholder-blueGray-300\", \"text-blueGray-600\", \"bg-white\", \"rounded\", \"text-sm\", \"shadow\", \"focus:outline-none\", \"focus:ring\", \"w-full\", \"ease-linear\", \"transition-all\", \"duration-150\"], [1, \"lg:flex\", \"mx-auto\", \"py-6\", \"gap-4\", \"xs:flex-col\"], [1, \"w-full\", \"lg:w-6/12\"], [\"class\", \"block uppercase text-blueGray-600 text-xs font-bold mb-2\", \"htmlfor\", \"grid-password\", 4, \"ngIf\"], [\"type\", \"file\", \"id\", \"exampleFormControlFile1\", \"name\", \"img\", 1, \"form-control-file\", \"rounded-xl\", \"bg-base-100\", 3, \"change\"], [1, \"relative\", \"w-full\", \"lg:w-6/12\", \"mb-3\"], [\"type\", \"file\", \"id\", \"exampleFormControlFile1\", \"name\", \"background_img\", 1, \"form-control-file\", \"rounded-xl\", \"bg-base-100\", 3, \"change\"], [4, \"ngIf\"], [1, \"text-blueGray-700\", \"text-xl\", \"font-bold\"], [1, \"mx-auto\", \"text-right\"], [\"type\", \"submit\", 1, \"bg-base-100\", \"text-white\", \"active:bg-base-500\", \"font-bold\", \"uppercase\", \"text-xs\", \"px-4\", \"py-3\", \"mt-2\", \"rounded\", \"shadow\", \"hover:shadow-md\", \"outline-none\", \"focus:outline-none\", \"mr-1\", \"ease-linear\", \"transition-all\", \"duration-150\"], [1, \"text-blueGray-400\", \"text-sm\", \"mt-3\", \"mb-6\", \"font-bold\", \"uppercase\"], [\"class\", \"text-blueGray-400 text-sm mt-3 mb-0 font-bold uppercase\", 4, \"ngIf\"], [1, \"w-80%\", \"lg:w-4/12\", \"px-1\", \"pt-6\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\", 1, \"border-0\", \"px-3\", \"py-3\", \"placeholder-blueGray-300\", \"text-blueGray-600\", \"bg-white\", \"rounded\", \"text-sm\", \"shadow\", \"focus:outline-none\", \"focus:ring\", \"w-full\", \"ease-linear\", \"transition-all\", \"duration-150\"], [\"type\", \"password\", \"name\", \"password2\", \"placeholder\", \"Password\", \"formControlName\", \"password2\", 1, \"border-0\", \"px-3\", \"py-3\", \"placeholder-blueGray-300\", \"text-blueGray-600\", \"bg-white\", \"rounded\", \"text-sm\", \"shadow\", \"focus:outline-none\", \"focus:ring\", \"w-full\", \"ease-linear\", \"transition-all\", \"duration-150\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password3\", 1, \"border-0\", \"px-3\", \"py-3\", \"placeholder-blueGray-300\", \"text-blueGray-600\", \"bg-white\", \"rounded\", \"text-sm\", \"shadow\", \"focus:outline-none\", \"focus:ring\", \"w-full\", \"ease-linear\", \"transition-all\", \"duration-150\"], [1, \"text-blueGray-400\", \"text-sm\", \"mt-3\", \"mb-0\", \"font-bold\", \"uppercase\"]],\n  template: function BigformComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n      i0.ɵɵtemplate(5, BigformComponent_h6_5_Template, 2, 0, \"h6\", 5);\n      i0.ɵɵtemplate(6, BigformComponent_h6_6_Template, 2, 0, \"h6\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"form\", 7);\n      i0.ɵɵlistener(\"submit\", function BigformComponent_Template_form_submit_8_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtemplate(9, BigformComponent_div_9_Template, 3, 0, \"div\", 8);\n      i0.ɵɵtemplate(10, BigformComponent_div_10_Template, 3, 0, \"div\", 8);\n      i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 10)(13, \"div\", 11)(14, \"label\", 12);\n      i0.ɵɵtext(15, \" Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 13);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(17, \"hr\", 14);\n      i0.ɵɵtemplate(18, BigformComponent_h6_18_Template, 2, 0, \"h6\", 15);\n      i0.ɵɵtemplate(19, BigformComponent_h6_19_Template, 2, 0, \"h6\", 15);\n      i0.ɵɵelementStart(20, \"div\", 9)(21, \"div\", 10)(22, \"div\", 11)(23, \"label\", 12);\n      i0.ɵɵtext(24, \" Description \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"textarea\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 17)(27, \"div\", 18)(28, \"div\", 11);\n      i0.ɵɵtemplate(29, BigformComponent_label_29_Template, 2, 0, \"label\", 19);\n      i0.ɵɵtemplate(30, BigformComponent_label_30_Template, 2, 0, \"label\", 19);\n      i0.ɵɵelementStart(31, \"input\", 20);\n      i0.ɵɵlistener(\"change\", function BigformComponent_Template_input_change_31_listener($event) {\n        return ctx.onImgChange($event);\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(32, \"div\", 21)(33, \"label\", 12);\n      i0.ɵɵtext(34, \" Cover Photo \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"input\", 22);\n      i0.ɵɵlistener(\"change\", function BigformComponent_Template_input_change_35_listener($event) {\n        return ctx.onBackgroundImgChange($event);\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtemplate(36, BigformComponent_div_36_Template, 19, 1, \"div\", 23);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.type == \"clan\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.type == \"user\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.editForm);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.type == \"clan\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.type == \"user\");\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.type == \"clan\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.type == \"user\");\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.type == \"user\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.type == \"clan\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.type == \"user\");\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJiaWdmb3JtLmNvbXBvbmVudC5jc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9iaWdmb3JtL2JpZ2Zvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esb0tBQW9LIiwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,SAAS,EAAEC,WAAW,QAAQ,gBAAgB;;;;;;;;;ICKnCC,8BAAqE;IACjEA,0BACJ;IAAAA,iBAAK;;;;;IACLA,8BAAqE;IACjEA,8BACJ;IAAAA,iBAAK;;;;;IAKLA,+BAAqD;IAI7CA,wBACJ;IAAAA,iBAAS;;;;;IAEbA,+BAAqD;IAI7CA,uBACJ;IAAAA,iBAAS;;;;;IAkBbA,8BAAyF;IACrFA,6BACJ;IAAAA,iBAAK;;;;;IAELA,8BAAyF;IACrFA,0BACJ;IAAAA,iBAAK;;;;;IAgBWA,iCACiD;IAC7CA,+BACJ;IAAAA,iBAAQ;;;;;IACRA,iCACiD;IAC7CA,4BACJ;IAAAA,iBAAQ;;;;;IAiBpBA,8BAAyF;IACrFA,0BACJ;IAAAA,iBAAK;;;;;IAJTA,2BAA0B;IACtBA,yBAAgD;IAChDA,uEAEK;IACLA,8BAA8B;IAMdA,iCACJ;IAAAA,iBAAQ;IACRA,4BAEsE;IAC1EA,iBAAM;IAEVA,+BAAuC;IAI3BA,+BACJ;IAAAA,iBAAQ;IACRA,6BAEwE;IAC5EA,iBAAM;IAGVA,gCAAuC;IAI3BA,mCACJ;IAAAA,iBAAQ;IACRA,6BAEuE;IAC3EA,iBAAM;;;;IArCuDA,eAAkB;IAAlBA,4CAAkB;;;ADjF/G,OAAM,MAAOC,gBAAgB;EAM3BC,YAAoBC,GAAe,EAAUC,IAAiB,EAAUC,MAAc;IAAlE,QAAG,GAAHF,GAAG;IAAsB,SAAI,GAAJC,IAAI;IAAuB,WAAM,GAANC,MAAM;IAE5E,IAAI,CAACC,QAAQ,GAAG,IAAIR,SAAS,CAAC;MAC5BS,IAAI,EAAE,IAAIR,WAAW,EAAE;MACvBS,IAAI,EAAE,IAAIT,WAAW,EAAE;MACvBU,QAAQ,EAAE,IAAIV,WAAW,EAAE;MAC3BW,SAAS,EAAE,IAAIX,WAAW,EAAE;MAC5BY,SAAS,EAAE,IAAIZ,WAAW;KAC3B,CAAC;IAEF,IAAI,IAAI,CAACa,IAAI,KAAK,MAAM,EAAE;MACxB,IAAI,CAACT,GAAG,CAACU,eAAe,EAAE,CAACC,SAAS,CAAEC,IAAS,IAAI;QACjD,IAAI,CAACT,QAAQ,CAACU,QAAQ,CAACT,IAAI,CAACU,QAAQ,CAACF,IAAI,CAACR,IAAI,CAAC;QAC/C,IAAI,CAACD,QAAQ,CAACU,QAAQ,CAACR,IAAI,CAACS,QAAQ,CAACF,IAAI,CAACG,GAAG,CAAC;MAChD,CAAC,CAAC;KACH,MAAM,IAAI,IAAI,CAACN,IAAI,KAAK,MAAM,EAAE;EAEnC;EAGAO,WAAW,CAACC,KAAU;IACpB,IAAI,CAACC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAClC;EAEAC,qBAAqB,CAACJ,KAAU;IAC9B,IAAI,CAACK,cAAc,GAAGL,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC7C;EAEAG,QAAQ;IACN,IAAI,IAAI,CAACd,IAAI,KAAK,MAAM,EAAE;MACxB,IAAI,CAAC,IAAI,CAACN,QAAQ,CAACqB,KAAK,CAAClB,QAAQ,EAAE;QACjCmB,KAAK,CAAC,4BAA4B,CAAC;OACpC,MACI,IAAI,CAAC,IAAI,CAACtB,QAAQ,CAACqB,KAAK,CAACjB,SAAS,IAAI,IAAI,CAACJ,QAAQ,CAACqB,KAAK,CAAChB,SAAS,KAAK,IAAI,CAACL,QAAQ,CAACqB,KAAK,CAACjB,SAAS,KAAK,IAAI,CAACJ,QAAQ,CAACqB,KAAK,CAAChB,SAAS,EAAE;QAC5IiB,KAAK,CAAC,wBAAwB,CAAC;OAChC,MACI;QACH,IAAIC,MAAM,GAAqH;UAC7HtB,IAAI,EAAE,IAAI,CAACD,QAAQ,CAACqB,KAAK,CAACpB,IAAI;UAC9BW,GAAG,EAAE,IAAI,CAACZ,QAAQ,CAACqB,KAAK,CAACnB,IAAI;UAC7BC,QAAQ,EAAE,IAAI,CAACH,QAAQ,CAACqB,KAAK,CAAClB;SAC/B;QACD,IAAI,IAAI,CAACH,QAAQ,CAACqB,KAAK,CAACjB,SAAS,EAAE;UACjCmB,MAAM,CAACC,YAAY,GAAG,IAAI,CAACxB,QAAQ,CAACqB,KAAK,CAACjB,SAAS;;QAErD,IAAI,IAAI,CAACW,GAAG,EAAE;UACZ,IAAIU,MAAM,GAAG,IAAIC,UAAU,EAAE;UAC7BD,MAAM,CAACE,aAAa,CAAC,IAAI,CAACZ,GAAG,CAAC;UAC9BU,MAAM,CAACG,MAAM,GAAG,MAAK;YACnBL,MAAM,CAACR,GAAG,GAAG,CAACU,MAAM,CAACI,MAAgB,EAAE,IAAI,CAACd,GAAG,CAACd,IAAI,CAAC;YACrD,IAAI,IAAI,CAACkB,cAAc,EAAE;cACvB,IAAIW,OAAO,GAAG,IAAIJ,UAAU,EAAE;cAC9BI,OAAO,CAACH,aAAa,CAAC,IAAI,CAACR,cAAc,CAAC;cAC1CW,OAAO,CAACF,MAAM,GAAG,MAAK;gBACpBL,MAAM,CAACJ,cAAc,GAAG,CAACW,OAAO,CAACD,MAAgB,EAAE,IAAI,CAACV,cAAc,CAAClB,IAAI,CAAC;gBAC5E,IAAI,CAAC8B,QAAQ,CAACR,MAAM,CAAC;cACvB,CAAC;aACF,MACI;cACH,IAAI,CAACQ,QAAQ,CAACR,MAAM,CAAC;;UAEzB,CAAC;SACF,MACI,IAAI,IAAI,CAACJ,cAAc,EAAE;UAC5B,IAAIM,MAAM,GAAG,IAAIC,UAAU,EAAE;UAC7BD,MAAM,CAACE,aAAa,CAAC,IAAI,CAACR,cAAc,CAAC;UACzCM,MAAM,CAACG,MAAM,GAAG,MAAK;YACnBL,MAAM,CAACJ,cAAc,GAAG,CAACM,MAAM,CAACI,MAAgB,EAAE,IAAI,CAACV,cAAc,CAAClB,IAAI,CAAC;YAC3E,IAAI,IAAI,CAACc,GAAG,EAAE;cACZ,IAAIe,OAAO,GAAG,IAAIJ,UAAU,EAAE;cAC9BI,OAAO,CAACH,aAAa,CAAC,IAAI,CAACZ,GAAG,CAAC;cAC/Be,OAAO,CAACF,MAAM,GAAG,MAAK;gBACpBL,MAAM,CAACR,GAAG,GAAG,CAACe,OAAO,CAACD,MAAgB,EAAE,IAAI,CAACd,GAAG,CAACd,IAAI,CAAC;gBACtD,IAAI,CAAC8B,QAAQ,CAACR,MAAM,CAAC;cACvB,CAAC;aACF,MACI;cACH,IAAI,CAACQ,QAAQ,CAACR,MAAM,CAAC;;UAEzB,CAAC;SACF,MACI;UACH,IAAI,CAACQ,QAAQ,CAACR,MAAM,CAAC;;;KAG1B,MAAM,IAAI,IAAI,CAACjB,IAAI,KAAK,MAAM,EAAE;MAC/B,IAAIiB,MAAM,GAAiG;QACzGtB,IAAI,EAAE,IAAI,CAACD,QAAQ,CAACqB,KAAK,CAACpB,IAAI;QAC9BC,IAAI,EAAE,IAAI,CAACF,QAAQ,CAACqB,KAAK,CAACnB,IAAI;QAC9BC,QAAQ,EAAE,IAAI,CAACH,QAAQ,CAACqB,KAAK,CAAClB;OAC/B;MACD,IAAI,IAAI,CAACY,GAAG,EAAE;QACZ,IAAIU,MAAM,GAAG,IAAIC,UAAU,EAAE;QAC7BD,MAAM,CAACE,aAAa,CAAC,IAAI,CAACZ,GAAG,CAAC;QAC9BU,MAAM,CAACG,MAAM,GAAG,MAAK;UACnBL,MAAM,CAACR,GAAG,GAAG,CAACU,MAAM,CAACI,MAAgB,EAAE,IAAI,CAACd,GAAG,CAACd,IAAI,CAAC;UACrD,IAAI,IAAI,CAACkB,cAAc,EAAE;YACvB,IAAIW,OAAO,GAAG,IAAIJ,UAAU,EAAE;YAC9BI,OAAO,CAACH,aAAa,CAAC,IAAI,CAACR,cAAc,CAAC;YAC1CW,OAAO,CAACF,MAAM,GAAG,MAAK;cACpBL,MAAM,CAACJ,cAAc,GAAG,CAACW,OAAO,CAACD,MAAgB,EAAE,IAAI,CAACV,cAAc,CAAClB,IAAI,CAAC;cAC5E,IAAI,CAAC8B,QAAQ,CAACR,MAAM,CAAC;YACvB,CAAC;WACF,MACI;YACH,IAAI,CAACQ,QAAQ,CAACR,MAAM,CAAC;;QAEzB,CAAC;OACF,MACI,IAAI,IAAI,CAACJ,cAAc,EAAE;QAC5B,IAAIM,MAAM,GAAG,IAAIC,UAAU,EAAE;QAC7BD,MAAM,CAACE,aAAa,CAAC,IAAI,CAACR,cAAc,CAAC;QACzCM,MAAM,CAACG,MAAM,GAAG,MAAK;UACnBL,MAAM,CAACJ,cAAc,GAAG,CAACM,MAAM,CAACI,MAAgB,EAAE,IAAI,CAACV,cAAc,CAAClB,IAAI,CAAC;UAC3E,IAAI,IAAI,CAACc,GAAG,EAAE;YACZ,IAAIe,OAAO,GAAG,IAAIJ,UAAU,EAAE;YAC9BI,OAAO,CAACH,aAAa,CAAC,IAAI,CAACZ,GAAG,CAAC;YAC/Be,OAAO,CAACF,MAAM,GAAG,MAAK;cACpBL,MAAM,CAACR,GAAG,GAAG,CAACe,OAAO,CAACD,MAAgB,EAAE,IAAI,CAACd,GAAG,CAACd,IAAI,CAAC;cACtD,IAAI,CAAC8B,QAAQ,CAACR,MAAM,CAAC;YACvB,CAAC;WACF,MACI;YACH,IAAI,CAACQ,QAAQ,CAACR,MAAM,CAAC;;QAEzB,CAAC;OACF,MAAM;QACL,IAAI,CAACQ,QAAQ,CAACR,MAAM,CAAC;;;EAG3B;EAEAQ,QAAQ,CAACR,MAAW;IAClB,IAAI,IAAI,CAACjB,IAAI,KAAK,MAAM,EAAE;MACxB,IAAI,CAACT,GAAG,CAACmC,aAAa,CAACT,MAAM,CAAC,CAACf,SAAS,CAAEC,IAAS,IAAI;QACrD,IAAIA,IAAI,CAACwB,cAAc,CAAC,OAAO,CAAC,EAAE;UAChCX,KAAK,CAACb,IAAI,CAACyB,KAAK,CAAC;SAClB,MACI;UACHZ,KAAK,CAACb,IAAI,CAAC0B,OAAO,CAAC;UACnB,IAAI,IAAI,CAACnC,QAAQ,CAACqB,KAAK,CAACjB,SAAS,EAAE;YACjC,IAAI,CAACN,IAAI,CAACsC,MAAM,EAAE;YAClB;;UAEFC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;;MAE5B,CAAC,CAAC;KACH,MAAM,IAAI,IAAI,CAACjC,IAAI,KAAK,MAAM,EAAE;MAC/B,IAAI,CAACT,GAAG,CAAC2C,UAAU,CAACjB,MAAM,CAAC,CAACf,SAAS,CAAEC,IAAS,IAAI;QAClD,IAAIA,IAAI,CAACwB,cAAc,CAAC,OAAO,CAAC,EAAE;UAChCX,KAAK,CAACb,IAAI,CAACyB,KAAK,CAAC;SAClB,MACI;UACHZ,KAAK,CAACb,IAAI,CAAC0B,OAAO,CAAC;UACnB,IAAI,CAACpC,MAAM,CAAC0C,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;;MAEtC,CAAC,CAAC;;EAEN;;AApKW9C,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAA+C;EAAAC;IAAArC;EAAA;EAAAsC;EAAAC;EAAAC;EAAAC;IAAA;MCX7BrD,8BAAmD;MAM/BA,+DAEK;MACLA,+DAEK;MACTA,iBAAM;MAEVA,8BAAgD;MACfA;QAAA,OAAUsD,cAAU;MAAA,EAAC;MAC9CtD,iEAMM;MACNA,mEAMM;MACNA,+BAA4B;MAKZA,uBACJ;MAAAA,iBAAQ;MACRA,6BAEuC;MAC3CA,iBAAM;MAIdA,0BAAgD;MAEhDA,kEAEK;MAELA,kEAEK;MACLA,+BAA4B;MAKZA,8BACJ;MAAAA,iBAAQ;MACRA,gCAE8D;MAClEA,iBAAM;MAEVA,gCAAoD;MAGxCA,wEAGQ;MACRA,wEAGQ;MACRA,kCAC2E;MAA/BA;QAAA,OAAUsD,uBAAmB;MAAA,EAAC;MAD1EtD,iBAC2E;MAGnFA,gCAA4C;MAGpCA,8BACJ;MAAAA,iBAAQ;MACRA,kCACgG;MAAzCA;QAAA,OAAUsD,iCAA6B;MAAA,EAAC;MAD/FtD,iBACgG;MAI5GA,qEA0CM;MACVA,iBAAO;;;MA/H8CA,eAAkB;MAAlBA,yCAAkB;MAGlBA,eAAkB;MAAlBA,yCAAkB;MAMjEA,eAAsB;MAAtBA,wCAAsB;MACSA,eAAkB;MAAlBA,yCAAkB;MAOlBA,eAAkB;MAAlBA,yCAAkB;MAuBkBA,eAAkB;MAAlBA,yCAAkB;MAIlBA,eAAkB;MAAlBA,yCAAkB;MAmB1CA,gBAAkB;MAAlBA,yCAAkB;MAIlBA,eAAkB;MAAlBA,yCAAkB;MAiBzDA,eAAkB;MAAlBA,yCAAkB","names":["FormGroup","FormControl","i0","BigformComponent","constructor","api","auth","router","editForm","name","desc","password","password2","password3","type","getBasicProfile","subscribe","data","controls","setValue","bio","onImgChange","event","img","target","files","onBackgroundImgChange","background_img","onSubmit","value","alert","header","new_password","reader","FileReader","readAsDataURL","onload","result","reader2","api_call","updateProfile","hasOwnProperty","error","success","logout","window","location","reload","createClan","navigate","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/gui/TPW/tpw-projeto2/clanly/src/app/components/bigform/bigform.component.ts","/home/gui/TPW/tpw-projeto2/clanly/src/app/components/bigform/bigform.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ApiService } from 'src/app/services/api-service.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-bigform',\n  templateUrl: './bigform.component.html',\n  styleUrls: ['./bigform.component.css']\n})\nexport class BigformComponent implements OnInit {\n  @Input() type?: string;\n  editForm: FormGroup | any;\n  img: File | any;\n  background_img: File | any;\n\n  constructor(private api: ApiService, private auth: AuthService, private router: Router) {\n    \n    this.editForm = new FormGroup({\n      name: new FormControl(),\n      desc: new FormControl(),\n      password: new FormControl(),\n      password2: new FormControl(),\n      password3: new FormControl(),\n    });\n\n    if (this.type === \"user\") {\n      this.api.getBasicProfile().subscribe((data: any) => {\n        this.editForm.controls.name.setValue(data.name);\n        this.editForm.controls.desc.setValue(data.bio);\n      });\n    } else if (this.type === \"clan\") {\n    }\n  }\n\n\n  onImgChange(event: any) {\n    this.img = event.target.files[0];\n  }\n\n  onBackgroundImgChange(event: any) {\n    this.background_img = event.target.files[0];\n  }\n\n  onSubmit() {\n    if (this.type === \"user\") {\n      if (!this.editForm.value.password) {\n        alert(\"Please enter your password\");\n      }\n      else if ((this.editForm.value.password2 || this.editForm.value.password3) && this.editForm.value.password2 !== this.editForm.value.password3) {\n        alert(\"Passwords do not match\");\n      }\n      else {\n        let header: {name: string, bio: string, password: string, new_password?: string, img?:any, background_img?:any, token?: any} = {\n          name: this.editForm.value.name,\n          bio: this.editForm.value.desc,\n          password: this.editForm.value.password,\n        };\n        if (this.editForm.value.password2) {\n          header.new_password = this.editForm.value.password2;\n        }\n        if (this.img) {\n          let reader = new FileReader();\n          reader.readAsDataURL(this.img);\n          reader.onload = () => {\n            header.img = [reader.result as string, this.img.name];\n            if (this.background_img) {\n              let reader2 = new FileReader();\n              reader2.readAsDataURL(this.background_img);\n              reader2.onload = () => {\n                header.background_img = [reader2.result as string, this.background_img.name];\n                this.api_call(header);\n              }\n            }\n            else {\n              this.api_call(header);\n            }\n          }\n        }\n        else if (this.background_img) {\n          let reader = new FileReader();\n          reader.readAsDataURL(this.background_img);\n          reader.onload = () => {\n            header.background_img = [reader.result as string, this.background_img.name];\n            if (this.img) {\n              let reader2 = new FileReader();\n              reader2.readAsDataURL(this.img);\n              reader2.onload = () => {\n                header.img = [reader2.result as string, this.img.name];\n                this.api_call(header);\n              }\n            }\n            else {\n              this.api_call(header);\n            }\n          }\n        }\n        else {\n          this.api_call(header);\n        }\n      }\n    } else if (this.type === \"clan\") {\n      let header: { name: string, desc: string, password: string, img?:any, background_img?:any, token?: any } = {\n        name: this.editForm.value.name,\n        desc: this.editForm.value.desc,\n        password: this.editForm.value.password,\n      };\n      if (this.img) {\n        let reader = new FileReader();\n        reader.readAsDataURL(this.img);\n        reader.onload = () => {\n          header.img = [reader.result as string, this.img.name];\n          if (this.background_img) {\n            let reader2 = new FileReader();\n            reader2.readAsDataURL(this.background_img);\n            reader2.onload = () => {\n              header.background_img = [reader2.result as string, this.background_img.name];\n              this.api_call(header);\n            }\n          }\n          else {\n            this.api_call(header);\n          }\n        }\n      }\n      else if (this.background_img) {\n        let reader = new FileReader();\n        reader.readAsDataURL(this.background_img);\n        reader.onload = () => {\n          header.background_img = [reader.result as string, this.background_img.name];\n          if (this.img) {\n            let reader2 = new FileReader();\n            reader2.readAsDataURL(this.img);\n            reader2.onload = () => {\n              header.img = [reader2.result as string, this.img.name];\n              this.api_call(header);\n            }\n          }\n          else {\n            this.api_call(header);\n          }\n        }\n      } else {\n        this.api_call(header);\n      }\n    }\n  }\n\n  api_call(header: any) {\n    if (this.type === \"user\") {\n      this.api.updateProfile(header).subscribe((data: any) => {\n        if (data.hasOwnProperty('error')) {\n          alert(data.error);\n        }\n        else {\n          alert(data.success);\n          if (this.editForm.value.password2) {\n            this.auth.logout();\n            return;\n          }\n          window.location.reload();\n        }\n      });\n    } else if (this.type === \"clan\") {\n      this.api.createClan(header).subscribe((data: any) => {\n        if (data.hasOwnProperty('error')) {\n          alert(data.error);\n        }\n        else {\n          alert(data.success);\n          this.router.navigate(['/myclans']);\n        }\n      });\n    }\n  }\n}\n","<div class=\"bg-base-600 h-full\" data-aos=\"fade-up\">\n    <div class=\"w-full lg:w-8/12 px-4 mx-auto mt-6\">\n        <div\n            class=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-blueGray-100 border-0\">\n            <div class=\"rounded-t bg-white mb-0 px-6 py-6\">\n                <div class=\"text-center flex justify-between\">\n                    <h6 class=\"text-blueGray-700 text-xl font-bold\" *ngIf=\"type=='clan'\">\n                        New Clan\n                    </h6>\n                    <h6 class=\"text-blueGray-700 text-xl font-bold\" *ngIf=\"type=='user'\">\n                        Edit Profile\n                    </h6>\n                </div>\n            </div>\n            <div class=\"flex-auto px-4 lg:px-10 py-10 pt-0\">\n                <form [formGroup]=\"editForm\" (submit)=\"onSubmit()\" enctype=\"multipart/form-data\">\n                    <div class=\"mx-auto text-right\" *ngIf=\"type=='clan'\">\n                        <button\n                            class=\"bg-base-100 text-white active:bg-base-500 font-bold uppercase text-xs px-4 py-3 mt-2 rounded shadow hover:shadow-md outline-none focus:outline-none mr-1 ease-linear transition-all duration-150\"\n                            type=\"submit\">\n                            Create\n                        </button>\n                    </div>\n                    <div class=\"mx-auto text-right\" *ngIf=\"type=='user'\">\n                        <button\n                            class=\"bg-base-100 text-white active:bg-base-500 font-bold uppercase text-xs px-4 py-3 mt-2 rounded shadow hover:shadow-md outline-none focus:outline-none mr-1 ease-linear transition-all duration-150\"\n                            type=\"submit\">\n                            Apply\n                        </button>\n                    </div>\n                    <div class=\"flex flex-wrap\">\n                        <div class=\"w-full lg:w-12/12 px-4\">\n                            <div class=\"relative w-full mb-3\">\n                                <label class=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\n                                    htmlfor=\"grid-password\">\n                                    Name\n                                </label>\n                                <input type=\"text\"\n                                    class=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\n                                    name=\"name\" formControlName=\"name\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <hr class=\"mt-6 border-b-1 border-blueGray-300\">\n\n                    <h6 class=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\" *ngIf=\"type=='clan'\">\n                        Description\n                    </h6>\n\n                    <h6 class=\"text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase\" *ngIf=\"type=='user'\">\n                        About Me\n                    </h6>\n                    <div class=\"flex flex-wrap\">\n                        <div class=\"w-full lg:w-12/12 px-4\">\n                            <div class=\"relative w-full mb-3\">\n                                <label class=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\n                                    htmlfor=\"grid-password\">\n                                    Description\n                                </label>\n                                <textarea type=\"text\"\n                                    class=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\n                                    rows=\"4\" name=\"content\" formControlName=\"desc\"></textarea>\n                            </div>\n                        </div>\n                        <div class=\"lg:flex mx-auto py-6 gap-4 xs:flex-col\">\n                            <div class=\"w-full lg:w-6/12\">\n                                <div class=\"relative w-full mb-3\">\n                                    <label class=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\n                                        htmlfor=\"grid-password\" *ngIf=\"type=='user'\">\n                                        Profile Photo\n                                    </label>\n                                    <label class=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\n                                        htmlfor=\"grid-password\" *ngIf=\"type=='clan'\">\n                                        Clan Photo\n                                    </label>\n                                    <input type=\"file\" class=\"form-control-file rounded-xl bg-base-100\"\n                                        id=\"exampleFormControlFile1\" name=\"img\" (change)=\"onImgChange($event)\">\n                                </div>\n                            </div>\n                            <div class=\"relative w-full lg:w-6/12 mb-3\">\n                                <label class=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\n                                    htmlfor=\"grid-password\">\n                                    Cover Photo\n                                </label>\n                                <input type=\"file\" class=\"form-control-file rounded-xl bg-base-100\"\n                                    id=\"exampleFormControlFile1\" name=\"background_img\" (change)=\"onBackgroundImgChange($event)\">\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"type=='user'\">\n                        <hr class=\"mt-6 border-b-1 border-blueGray-300\">\n                        <h6 class=\"text-blueGray-400 text-sm mt-3 mb-0 font-bold uppercase\" *ngIf=\"type=='user'\">\n                            Password\n                        </h6>\n                        <div class=\"flex flex-wrap  \">\n\n                            <div class=\"w-80% lg:w-4/12 px-1 pt-6\">\n                                <div class=\"relative w-full mb-3\">\n                                    <label class=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\n                                        htmlfor=\"grid-password\">\n                                        Curent Password\n                                    </label>\n                                    <input type=\"password\"\n                                        class=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\n                                        name=\"password\" placeholder=\"Password\" formControlName=\"password\">\n                                </div>\n                            </div>\n                            <div class=\"w-80% lg:w-4/12 px-1 pt-6\">\n                                <div class=\"relative w-full mb-3\">\n                                    <label class=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\n                                        htmlfor=\"grid-password\">\n                                        New Password\n                                    </label>\n                                    <input type=\"password\"\n                                        class=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\n                                        name=\"password2\" placeholder=\"Password\" formControlName=\"password2\">\n                                </div>\n                            </div>\n\n                            <div class=\"w-80% lg:w-4/12 px-1 pt-6\">\n                                <div class=\"relative w-full mb-3\">\n                                    <label class=\"block uppercase text-blueGray-600 text-xs font-bold mb-2\"\n                                        htmlfor=\"grid-password\">\n                                        Confirm Password\n                                    </label>\n                                    <input type=\"password\"\n                                        class=\"border-0 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\n                                        name=\"password\" placeholder=\"Password\" formControlName=\"password3\">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}