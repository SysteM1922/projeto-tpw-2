{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./api-service.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(api, router) {\n    this.api = api;\n    this.router = router;\n  }\n  login(username, password) {\n    return this.api.authenticate({\n      username,\n      password\n    });\n  }\n  canActivate(route) {\n    if (localStorage.getItem('token')) {\n      if (route.routeConfig && (route.routeConfig.path === 'login' || route.routeConfig.path === 'signup')) {\n        this.router.navigate(['/home']);\n        return false;\n      }\n      return true;\n    }\n    this.router.navigate(['/login']);\n    return false;\n  }\n  logout() {\n    let token = localStorage.getItem('token');\n    localStorage.removeItem('token');\n    this.router.navigate(['/login']);\n    this.api.logout(token);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.ApiService), i0.ɵɵinject(i2.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,GAAe,EAAUC,MAAc;IAAvC,QAAG,GAAHD,GAAG;IAAsB,WAAM,GAANC,MAAM;EAAY;EAE/DC,KAAK,CAACC,QAAgB,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACJ,GAAG,CAACK,YAAY,CAAC;MAAEF,QAAQ;MAAEC;IAAQ,CAAE,CAAC;EACtD;EAEAE,WAAW,CAACC,KAA6B;IACvC,IAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;MACjC,IAAIF,KAAK,CAACG,WAAW,KAAKH,KAAK,CAACG,WAAW,CAACC,IAAI,KAAK,OAAO,IAAIJ,KAAK,CAACG,WAAW,CAACC,IAAI,KAAK,QAAQ,CAAC,EAAE;QACpG,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QAC/B,OAAO,KAAK;;MAEd,OAAO,IAAI;;IAEb,IAAI,CAACX,MAAM,CAACW,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAChC,OAAO,KAAK;EACd;EAEAC,MAAM;IACJ,IAAIC,KAAK,GAAGN,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACzCD,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAACd,MAAM,CAACW,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAChC,IAAI,CAACZ,GAAG,CAACa,MAAM,CAACC,KAAK,CAAC;EACxB;;AAzBWhB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAFV;AAAM","names":["AuthService","constructor","api","router","login","username","password","authenticate","canActivate","route","localStorage","getItem","routeConfig","path","navigate","logout","token","removeItem","factory","providedIn"],"sourceRoot":"","sources":["/home/gui/TPW/tpw-projeto2/clanly/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService } from './api-service.service';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Token } from '@angular/compiler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService implements CanActivate{\n\n  constructor(private api: ApiService, private router: Router) { }\n\n  login(username: string, password: string): Observable<any> {\n    return this.api.authenticate({ username, password });\n  }\n\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n    if (localStorage.getItem('token')) {\n      if (route.routeConfig && (route.routeConfig.path === 'login' || route.routeConfig.path === 'signup')) {\n        this.router.navigate(['/home']);\n        return false;\n      }\n      return true;\n    }\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n  logout() {\n    let token = localStorage.getItem('token');\n    localStorage.removeItem('token');\n    this.router.navigate(['/login']);\n    this.api.logout(token)\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}