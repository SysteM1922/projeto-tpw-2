{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nlet BigformComponent = class BigformComponent {\n  constructor(api, auth) {\n    this.api = api;\n    this.auth = auth;\n    this.editForm = new FormGroup({\n      name: new FormControl(),\n      desc: new FormControl(),\n      img: new FormControl(null),\n      background_img: new FormControl(null),\n      password: new FormControl(),\n      password2: new FormControl(),\n      password3: new FormControl()\n    });\n  }\n  ngOnInit() {\n    const token = sessionStorage.getItem(\"token\");\n    if (this.type === \"user\") {\n      this.api.getBasicProfile(token).subscribe(data => {\n        this.editForm.controls.name.setValue(data.name);\n        this.editForm.controls.desc.setValue(data.bio);\n      });\n    } else if (this.type === \"clan\") {}\n  }\n  onSubmit() {\n    if (this.type === \"user\") {\n      if (!this.editForm.value.password) {\n        alert(\"Please enter your password\");\n      } else if ((this.editForm.value.password2 || this.editForm.value.password3) && this.editForm.value.password2 !== this.editForm.value.password3) {\n        alert(\"Passwords do not match\");\n      } else {\n        let header = {\n          name: this.editForm.value.name,\n          bio: this.editForm.value.desc,\n          password: this.editForm.value.password\n        };\n        if (this.editForm.value.password2) {\n          header.new_password = this.editForm.value.password2;\n        }\n        if (this.editForm.value.img) {\n          let reader = new FileReader();\n          reader.readAsDataURL(this.editForm.value.img);\n          reader.onload = () => {\n            header.img = reader.result;\n          };\n        }\n        this.api.updateProfile(header).subscribe(data => {\n          if (data.hasOwnProperty('error')) {\n            alert(data.error);\n          } else {\n            alert(data.success);\n            if (this.editForm.value.password2) {\n              console.log(this.editForm.value.password2);\n              this.auth.logout();\n              return;\n            }\n            window.location.reload();\n          }\n        });\n      }\n    } else if (this.type === \"clan\") {}\n  }\n};\n__decorate([Input()], BigformComponent.prototype, \"type\", void 0);\nBigformComponent = __decorate([Component({\n  selector: 'app-bigform',\n  templateUrl: './bigform.component.html',\n  styleUrls: ['./bigform.component.css']\n})], BigformComponent);\nexport { BigformComponent };","map":{"version":3,"mappings":"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","names":["Component","Input","FormGroup","FormControl","BigformComponent","constructor","api","auth","name","desc","img","background_img","password","password2","password3","ngOnInit","token","sessionStorage","getItem","type","getBasicProfile","subscribe","data","editForm","controls","setValue","bio","onSubmit","value","alert","header","new_password","reader","FileReader","readAsDataURL","onload","result","updateProfile","hasOwnProperty","error","success","console","log","logout","window","location","reload","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/gui/TPW/tpw-projeto2/clanly/src/app/components/bigform/bigform.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ApiService } from 'src/app/services/api-service.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-bigform',\n  templateUrl: './bigform.component.html',\n  styleUrls: ['./bigform.component.css']\n})\nexport class BigformComponent implements OnInit {\n  @Input() type?: string;\n\n  constructor(private api: ApiService, private auth: AuthService) { }\n\n  editForm = new FormGroup({\n    name: new FormControl(),\n    desc: new FormControl(),\n    img: new FormControl(null),\n    background_img: new FormControl(null),\n    password: new FormControl(),\n    password2: new FormControl(),\n    password3: new FormControl(),\n  });\n\n  ngOnInit() {\n    const token = sessionStorage.getItem(\"token\");\n    if (this.type === \"user\") {\n      this.api.getBasicProfile(token).subscribe((data: any) => {\n        this.editForm.controls.name.setValue(data.name);\n        this.editForm.controls.desc.setValue(data.bio);\n      });\n    } else if (this.type === \"clan\") {\n    }\n  }\n\n  onSubmit() {\n    if (this.type === \"user\") {\n      if (!this.editForm.value.password) {\n        alert(\"Please enter your password\");\n      }\n      else if ((this.editForm.value.password2 || this.editForm.value.password3) && this.editForm.value.password2 !== this.editForm.value.password3) {\n        alert(\"Passwords do not match\");\n      }\n      else {\n        let header: {name: string, bio: string, password: string, new_password?: string, img?:any, background_img?:any, token?: any} = {\n          name: this.editForm.value.name,\n          bio: this.editForm.value.desc,\n          password: this.editForm.value.password,\n        };\n        if (this.editForm.value.password2) {\n          header.new_password = this.editForm.value.password2;\n        }\n        if (this.editForm.value.img) {\n          let reader = new FileReader();\n          reader.readAsDataURL(this.editForm.value.img);\n          reader.onload = () => {\n            header.img = reader.result;\n          }\n        }\n        this.api.updateProfile(header).subscribe((data: any) => {\n          if (data.hasOwnProperty('error')) {\n            alert(data.error);\n          }\n          else {\n            alert(data.success);\n            if (this.editForm.value.password2) {\n              console.log(this.editForm.value.password2);\n              this.auth.logout();\n              return;\n            }\n            window.location.reload();\n          }\n        });\n      }\n    } else if (this.type === \"clan\") {\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}