{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport Typed from 'typed.js';\nconst _c0 = [\"wrapper\"];\nconst _c1 = [\"*\"];\nlet NgxTypedJsComponent = /*#__PURE__*/(() => {\n  class NgxTypedJsComponent {\n    constructor() {\n      this.typeSpeed = 30;\n      this.completed = new EventEmitter();\n      this.preStringTyped = new EventEmitter();\n      this.stringTyped = new EventEmitter();\n      this.lastStringBackspaced = new EventEmitter();\n      this.typingPaused = new EventEmitter();\n      this.typingResumed = new EventEmitter();\n      this.reset = new EventEmitter();\n      this.stopped = new EventEmitter();\n      this.started = new EventEmitter();\n      this.destroyed = new EventEmitter();\n    }\n    ngAfterViewInit() {\n      this.typed = new Typed(this.content.nativeElement.querySelector('.typing'), this.options);\n      if (this.showCursor !== false) {\n        this.updateCursorStyle();\n      }\n    }\n    toggle() {\n      this.typed.toggle();\n    }\n    stop() {\n      this.typed.stop();\n    }\n    start() {\n      this.typed.start();\n    }\n    destroy() {\n      this.typed.destroy();\n    }\n    doReset(restart) {\n      this.typed.reset(restart);\n    }\n    get options() {\n      const emit = emitter => () => emitter.emit();\n      const emitIndex = emitter => index => emitter.emit(index);\n      const opts = {\n        strings: this.strings ?? [''],\n        stringsElement: this.stringsElement,\n        typeSpeed: this.typeSpeed,\n        startDelay: this.startDelay,\n        backSpeed: this.backSpeed,\n        smartBackspace: this.smartBackspace,\n        shuffle: this.shuffle,\n        backDelay: this.backDelay,\n        fadeOut: this.fadeOut,\n        fadeOutClass: this.fadeOutClass,\n        fadeOutDelay: this.fadeOutDelay,\n        loop: this.loop,\n        loopCount: this.loopCount,\n        showCursor: this.showCursor,\n        autoInsertCss: this.autoInsertCss,\n        attr: this.attr,\n        bindInputFocusEvents: this.bindInputFocusEvents,\n        contentType: this.contentType,\n        onComplete: emit(this.completed),\n        preStringTyped: emitIndex(this.preStringTyped),\n        onStringTyped: emitIndex(this.stringTyped),\n        onLastStringBackspaced: emit(this.lastStringBackspaced),\n        onTypingPaused: emitIndex(this.typingPaused),\n        onTypingResumed: emitIndex(this.typingResumed),\n        onReset: emit(this.reset),\n        onStop: emitIndex(this.stopped),\n        onStart: emitIndex(this.started),\n        onDestroy: emit(this.destroyed)\n      };\n      Object.keys(opts).forEach(key => {\n        if (opts[key] === undefined) {\n          delete opts[key];\n        }\n      });\n      return opts;\n    }\n    updateCursorStyle() {\n      const textElementStyle = getComputedStyle(this.content.nativeElement.querySelector('.typing'));\n      const cursorElementStyle = this.content.nativeElement.querySelector('.typed-cursor').style;\n      cursorElementStyle.fontSize = textElementStyle.fontSize;\n      cursorElementStyle.color = this.cursorColor || textElementStyle.color;\n    }\n    ngOnChanges(changes) {\n      if (this.typed) {\n        this.typed.destroy();\n        this.ngAfterViewInit();\n      }\n    }\n  }\n  NgxTypedJsComponent.ɵfac = function NgxTypedJsComponent_Factory(t) {\n    return new (t || NgxTypedJsComponent)();\n  };\n  NgxTypedJsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgxTypedJsComponent,\n    selectors: [[\"ngx-typed-js\"]],\n    viewQuery: function NgxTypedJsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n      }\n    },\n    inputs: {\n      cursorColor: \"cursorColor\",\n      strings: \"strings\",\n      stringsElement: \"stringsElement\",\n      typeSpeed: \"typeSpeed\",\n      startDelay: \"startDelay\",\n      backSpeed: \"backSpeed\",\n      smartBackspace: \"smartBackspace\",\n      shuffle: \"shuffle\",\n      backDelay: \"backDelay\",\n      fadeOut: \"fadeOut\",\n      fadeOutClass: \"fadeOutClass\",\n      fadeOutDelay: \"fadeOutDelay\",\n      loop: \"loop\",\n      loopCount: \"loopCount\",\n      showCursor: \"showCursor\",\n      cursorChar: \"cursorChar\",\n      autoInsertCss: \"autoInsertCss\",\n      attr: \"attr\",\n      bindInputFocusEvents: \"bindInputFocusEvents\",\n      contentType: \"contentType\"\n    },\n    outputs: {\n      completed: \"completed\",\n      preStringTyped: \"preStringTyped\",\n      stringTyped: \"stringTyped\",\n      lastStringBackspaced: \"lastStringBackspaced\",\n      typingPaused: \"typingPaused\",\n      typingResumed: \"typingResumed\",\n      reset: \"reset\",\n      stopped: \"stopped\",\n      started: \"started\",\n      destroyed: \"destroyed\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c1,\n    decls: 3,\n    vars: 0,\n    consts: [[\"wrapper\", \"\"]],\n    template: function NgxTypedJsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", null, 0);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"[_nghost-%COMP%] > .typing[_ngcontent-%COMP%]{display:inline}\"]\n  });\n  return NgxTypedJsComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgxTypedJsModule = /*#__PURE__*/(() => {\n  class NgxTypedJsModule {}\n  NgxTypedJsModule.ɵfac = function NgxTypedJsModule_Factory(t) {\n    return new (t || NgxTypedJsModule)();\n  };\n  NgxTypedJsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgxTypedJsModule\n  });\n  NgxTypedJsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[]]\n  });\n  return NgxTypedJsModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*\n * Public API Surface of ngx-typed-js\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxTypedJsComponent, NgxTypedJsModule };\n//# sourceMappingURL=ngx-typed-js.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}