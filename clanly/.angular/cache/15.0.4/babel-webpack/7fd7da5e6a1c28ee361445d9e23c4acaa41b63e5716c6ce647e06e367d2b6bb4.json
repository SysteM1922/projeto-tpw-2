{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.baseURL = 'http://localhost:8000/api/';\n  }\n  authenticate(header) {\n    const url = this.baseURL + 'login/';\n    return this.http.post(url, header);\n  }\n  signup(header) {\n    const url = this.baseURL + 'signup/';\n    return this.http.post(url, header);\n  }\n  logout(header) {\n    const url = this.baseURL + 'logout/';\n    this.http.put(url, header).subscribe();\n  }\n  getProfile() {\n    const url = this.baseURL + 'profile?token=' + sessionStorage.getItem(\"token\");\n    return this.http.get(url);\n  }\n  getBasicProfile() {\n    const url = this.baseURL + 'basic_profile?token=' + sessionStorage.getItem(\"token\");\n    return this.http.get(url);\n  }\n  updateProfile(header) {\n    const url = this.baseURL + 'update_profile/';\n    header.token = sessionStorage.getItem(\"token\");\n    return this.http.put(url, header);\n  }\n  createClan(header) {\n    const url = this.baseURL + 'create_clan/';\n    header.token = sessionStorage.getItem(\"token\");\n    return this.http.post(url, header);\n  }\n  getMyClans() {\n    const url = this.baseURL + 'my_clans?token=' + sessionStorage.getItem(\"token\");\n    return this.http.get(url);\n  }\n  editClan(header) {\n    const url = this.baseURL + 'edit_clan/';\n    header.token = sessionStorage.getItem(\"token\");\n    return this.http.put(url, header);\n  }\n  deleteClan(header) {\n    const url = this.baseURL + 'delete_clan/';\n    header.token = sessionStorage.getItem(\"token\");\n    return this.http.delete(url, header);\n  }\n  getClan(clanId) {\n    const url = this.baseURL + 'get_clan?id=' + clanId + '&token=' + sessionStorage.getItem(\"token\");\n    return this.http.get(url);\n  }\n  followClan(header) {\n    const url = this.baseURL + 'follow_clan/';\n    header.token = sessionStorage.getItem(\"token\");\n    return this.http.put(url, header);\n  }\n  unfollowClan(header) {\n    const url = this.baseURL + 'unfollow_clan/';\n    header.token = sessionStorage.getItem(\"token\");\n    return this.http.put(url, header);\n  }\n  getFollowingClans() {\n    const url = this.baseURL + 'following_clans?token=' + sessionStorage.getItem(\"token\");\n    return this.http.get(url);\n  }\n  newPost(header) {\n    const url = this.baseURL + 'create_post/';\n    header.token = sessionStorage.getItem(\"token\");\n    return this.http.post(url, header);\n  }\n  getBasicPost(postId) {\n    const url = this.baseURL + 'basic_post?id=' + postId + '&token=' + sessionStorage.getItem(\"token\");\n    return this.http.get(url);\n  }\n  createComment(header) {\n    const url = this.baseURL + 'create_comment/';\n    header.token = sessionStorage.getItem(\"token\");\n    return this.http.post(url, header);\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["ApiService","constructor","http","authenticate","header","url","baseURL","post","signup","logout","put","subscribe","getProfile","sessionStorage","getItem","get","getBasicProfile","updateProfile","token","createClan","getMyClans","editClan","deleteClan","delete","getClan","clanId","followClan","unfollowClan","getFollowingClans","newPost","getBasicPost","postId","createComment","factory","providedIn"],"sourceRoot":"","sources":["/home/gui/TPW/tpw-projeto2/clanly/src/app/services/api-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient,  } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private baseURL = 'http://localhost:8000/api/';\n\n  constructor(private http: HttpClient) { }\n\n  authenticate(header: any): Observable<any> {\n    const url = this.baseURL+'login/';\n    return this.http.post(url, header);\n  }\n\n  signup(header: any): Observable<any> {\n    const url = this.baseURL + 'signup/';\n    return this.http.post(url, header);\n  }\n\n  logout(header: any) {\n    const url = this.baseURL + 'logout/';\n    this.http.put(url, header).subscribe();\n  }\n\n  getProfile(): Observable<any> {\n    const url = this.baseURL + 'profile?token=' + sessionStorage.getItem(\"token\");\n    return this.http.get(url);\n  }\n\n  getBasicProfile(): Observable<any> {\n    const url = this.baseURL + 'basic_profile?token=' + sessionStorage.getItem(\"token\");\n    return this.http.get(url);\n  }\n\n  updateProfile(header: any): Observable<any> {\n    const url = this.baseURL + 'update_profile/';\n    header.token = sessionStorage.getItem(\"token\");\n    return this.http.put(url, header);\n  }\n\n  createClan(header: any): Observable<any> {\n    const url = this.baseURL + 'create_clan/';\n    header.token = sessionStorage.getItem(\"token\");\n    return this.http.post(url, header);\n  }\n\n  getMyClans(): Observable<any> {\n    const url = this.baseURL + 'my_clans?token=' + sessionStorage.getItem(\"token\");\n    return this.http.get(url);\n  }\n\n  editClan(header: any): Observable<any> {\n    const url = this.baseURL + 'edit_clan/';\n    header.token = sessionStorage.getItem(\"token\");\n    return this.http.put(url, header);\n  }\n\n  deleteClan(header: any): Observable<any> {\n    const url = this.baseURL + 'delete_clan/';\n    header.token = sessionStorage.getItem(\"token\");\n    return this.http.delete(url, header);\n  }\n\n  getClan(clanId: any): Observable<any> {\n    const url = this.baseURL + 'get_clan?id=' + clanId + '&token=' + sessionStorage.getItem(\"token\");\n    return this.http.get(url);\n  }\n\n  followClan(header: any): Observable<any> {\n    const url = this.baseURL + 'follow_clan/';\n    header.token = sessionStorage.getItem(\"token\");\n    return this.http.put(url, header);\n  }\n\n  unfollowClan(header: any): Observable<any> {\n    const url = this.baseURL + 'unfollow_clan/';\n    header.token = sessionStorage.getItem(\"token\");\n    return this.http.put(url, header);\n  }\n\n  getFollowingClans(): Observable<any> {\n    const url = this.baseURL + 'following_clans?token=' + sessionStorage.getItem(\"token\");\n    return this.http.get(url);\n  }\n\n  newPost(header: any): Observable<any> {\n    const url = this.baseURL + 'create_post/';\n    header.token = sessionStorage.getItem(\"token\");\n    return this.http.post(url, header);\n  }\n\n  getBasicPost(postId: any): Observable<any> {\n    const url = this.baseURL + 'basic_post?id=' + postId + '&token=' + sessionStorage.getItem(\"token\");\n    return this.http.get(url);\n  }\n\n  createComment(header: any): Observable<any> {\n    const url = this.baseURL + 'create_comment/';\n    header.token = sessionStorage.getItem(\"token\");\n    return this.http.post(url, header);\n  }\n\n  deletePost\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}