{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nlet CommentComponent = class CommentComponent {\n  constructor() {\n    this.isOwner = false;\n  }\n  ngOnChanges(changes) {\n    this.comment = changes['comment'].currentValue;\n    console.log(this.comment);\n    console.log(sessionStorage.getItem('user_id'));\n    if (this.comment.user == sessionStorage.getItem('user_id')) {\n      this.isOwner = true;\n    }\n  }\n};\n__decorate([Input()], CommentComponent.prototype, \"comment\", void 0);\nCommentComponent = __decorate([Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})], CommentComponent);\nexport { CommentComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAmB,eAAe;AAOpD,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAI3BC;IAFA,YAAO,GAAY,KAAK;EAER;EAEhBC,WAAW,CAACC,OAAY;IACtB,IAAI,CAACC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC,CAACE,YAAY;IAC9CC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,OAAO,CAAC;IACzBE,OAAO,CAACC,GAAG,CAACC,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC9C,IAAI,IAAI,CAACL,OAAO,CAACM,IAAI,IAAIF,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC,EAAE;MAC1D,IAAI,CAACE,OAAO,GAAG,IAAI;;EAEvB;CACD;AAbUC,YAARb,KAAK,EAAE,iDAAc;AADXC,gBAAgB,eAL5BF,SAAS,CAAC;EACTe,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,GACWf,gBAAgB,CAc5B;SAdYA,gBAAgB","names":["Component","Input","CommentComponent","constructor","ngOnChanges","changes","comment","currentValue","console","log","sessionStorage","getItem","user","isOwner","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/gui/TPW/tpw-projeto2/clanly/src/app/components/post/comment/comment.component.ts"],"sourcesContent":["import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent implements OnChanges {\n  @Input() comment: any;\n  isOwner: boolean = false;\n\n  constructor() { }\n\n  ngOnChanges(changes: any) {\n    this.comment = changes['comment'].currentValue;\n    console.log(this.comment);\n    console.log(sessionStorage.getItem('user_id'));\n    if (this.comment.user == sessionStorage.getItem('user_id')) {\n      this.isOwner = true;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}