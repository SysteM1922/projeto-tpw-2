{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nlet PostComponent = class PostComponent {\n  constructor(img, api) {\n    this.img = img;\n    this.api = api;\n    this.image = 'https://placeimg.com/2000/1000/nature';\n    this.id = '';\n    this.comments = [];\n    this.clanImg = 'https://placeimg.com/400/400/people';\n    this.userImg = 'https://placeimg.com/400/400/people';\n    this.isOwner = false;\n    this.addCommentForm = new FormGroup({});\n    this.addCommentForm = new FormGroup({\n      comment: new FormControl()\n    });\n  }\n  ngOnChanges(changes) {\n    this.post = changes['post'].currentValue;\n    this.title = this.post.title;\n    this.content = this.post.description;\n    this.id = this.post.id;\n    this.image = this.img.getImage(this.post.post_img);\n    this.api.getBasicPost(this.id).subscribe(data => {\n      this.comments = data.comments;\n      this.clan = data.clan;\n      this.user = data.author;\n      this.clanImg = this.img.getImage(this.clan.clan_img);\n      this.userImg = this.img.getImage(this.user.profile_img);\n      if (this.user.id == sessionStorage.getItem('user_id')) {\n        this.isOwner = true;\n      }\n    });\n  }\n  createComment() {\n    console.log(this.addCommentForm.value.comment);\n    this.api.createComment({\n      post: this.id,\n      comment: this.addCommentForm.value.comment\n    }).subscribe(data => {\n      if (data.hasOwnProperty('error')) {\n        alert(data.error);\n      } else {\n        this.comments.push(data);\n        this.addCommentForm.reset();\n      }\n    });\n  }\n  deleteComment(id) {\n    this.api.deleteComment(id).subscribe(data => {\n      if (data.hasOwnProperty('error')) {\n        alert(data.error);\n      } else {\n        this.comments = this.comments.filter(comment => comment.id != id);\n      }\n    });\n  }\n};\n__decorate([Input()], PostComponent.prototype, \"title\", void 0);\n__decorate([Input()], PostComponent.prototype, \"content\", void 0);\n__decorate([Input()], PostComponent.prototype, \"image\", void 0);\n__decorate([Input()], PostComponent.prototype, \"post\", void 0);\nPostComponent = __decorate([Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})], PostComponent);\nexport { PostComponent };","map":{"version":3,"mappings":"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","names":["Component","Input","FormGroup","FormControl","PostComponent","constructor","img","api","addCommentForm","comment","ngOnChanges","changes","post","currentValue","title","content","description","id","image","getImage","post_img","getBasicPost","subscribe","data","comments","clan","user","author","clanImg","clan_img","userImg","profile_img","sessionStorage","getItem","isOwner","createComment","console","log","value","hasOwnProperty","alert","error","push","reset","deleteComment","filter","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/gui/TPW/tpw-projeto2/clanly/src/app/components/post/post.component.ts"],"sourcesContent":["import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ImageService } from 'src/app/services/image.service';\nimport { ApiService } from 'src/app/services/api-service.service';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnChanges {\n  @Input() title?: string;\n  @Input() content?: string;\n  @Input() image?: string = 'https://placeimg.com/2000/1000/nature';\n  @Input() post: any;\n  id: string | any = '';\n  comments: any = [];\n  clan: any;\n  user: any;\n  clanImg: string = 'https://placeimg.com/400/400/people';\n  userImg: string = 'https://placeimg.com/400/400/people';\n  isOwner: boolean = false;\n\n  addCommentForm: FormGroup = new FormGroup({});\n\n  constructor(private img: ImageService, private api: ApiService) {\n    this.addCommentForm = new FormGroup({\n      comment: new FormControl(),\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.post = changes['post'].currentValue;\n    this.title = this.post.title;\n    this.content = this.post.description;\n    this.id = this.post.id;\n    this.image = this.img.getImage(this.post.post_img);\n    this.api.getBasicPost(this.id).subscribe((data: any) => {\n      this.comments = data.comments;\n      this.clan = data.clan;\n      this.user = data.author;\n      this.clanImg = this.img.getImage(this.clan.clan_img);\n      this.userImg = this.img.getImage(this.user.profile_img);\n      if (this.user.id == sessionStorage.getItem('user_id')) {\n        this.isOwner = true;\n      }\n    });\n  }\n\n  createComment() {\n    console.log(this.addCommentForm.value.comment);\n    this.api.createComment({ post: this.id, comment: this.addCommentForm.value.comment }).subscribe((data: any) => {\n      if (data.hasOwnProperty('error')) {\n        alert(data.error);\n      } else {\n        this.comments.push(data);\n        this.addCommentForm.reset();\n      }\n    });\n  }\n\n  deleteComment(id: string) {\n    this.api.deleteComment(id).subscribe((data: any) => {\n      if (data.hasOwnProperty('error')) {\n        alert(data.error);\n      } else {\n        this.comments = this.comments.filter((comment: any) => comment.id != id);\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}